<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>2387</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>2386</string>
					<key>Timestamp</key>
					<string>748091321.336146</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DiffableDataSourceChatBootcamp/Controllers/MessageFeature/MessageRoomView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>            rooms?[index].updateSendMessageText(text)
</string>
				<key>leading</key>
				<string>        
        if let index = rooms?.firstIndex(where: { $0.document_id == room?.document_id }), let text {
</string>
				<key>trailing</key>
				<string>            textView.text = text
        }
    }
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>2463</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>2462</string>
					<key>Timestamp</key>
					<string>748091321.33647</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DiffableDataSourceChatBootcamp/Controllers/MessageFeature/MessageRoomView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        await itemProviders.asyncForEach { itemProvider in
</string>
				<key>leading</key>
				<string>        var selectPickerImages = [UIImage]()
        
</string>
				<key>trailing</key>
				<string>            do {
                let itemProviderImage = try await itemProvider.loadObject(ofClass: UIImage.self)
                if let image = itemProviderImage as? UIImage {
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>2815</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>2814</string>
					<key>Timestamp</key>
					<string>748091321.33483</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DiffableDataSourceChatBootcamp/Controllers/MessageFeature/MessageRoomView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        if !active {
</string>
				<key>leading</key>
				<string>        replyMessageType = (active == true ? replyMessageType : nil)
        
</string>
				<key>trailing</key>
				<string>            observeTypingState()
        }
    }
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>3092</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>3088</string>
					<key>Timestamp</key>
					<string>748116875.247087</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DiffableDataSourceChatBootcamp/Controllers/MessageFeature/MessageRoomView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        if var unsendMessage = roomMessages[safe: unsendMessageIndex] {
            unsendMessage.setMessageUnsend()
            self.room?.unsendMessage(index: unsendMessageIndex, message: unsendMessage)
        }
</string>
				<key>leading</key>
				<string>        // メッセージの送信取り消しフラグを更新
        db.collection("rooms").document(roomId).collection("messages").document(messageId).updateData(["is_deleted" : true])
</string>
				<key>trailing</key>
				<string>        
        // 送信取り消ししたメッセージが未読の場合は相手の未読数も更新
        let unreadCount = roomMessages.filter({
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
	</array>
</dict>
</plist>
